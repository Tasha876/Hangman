{"version":3,"sources":["Components/Splash.module.css","reportWebVitals.js","functions.js","Components/Splash.js","App.js","API/main.js","Elements/ChangeDisplay.js","Hangman.js","Elements/CurrMan.js","Elements/GameArea.js","Components/AutoHangman.js","Components/Main.js","Components/Source.js","index.js","Elements/GameArea.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","addTransition","href","elname","animationname","app","document","querySelector","addEventListener","event","preventDefault","classList","add","setTimeout","window","location","Splash","useEffect","id","App","className","getWord","cb","axios","get","res","data","catch","e","console","log","ChangeDisplay","setDisplayWord","displayWord","setGuessed","guessed","onSubmit","map","display","index","letter","target","value","ret","style","visibility","join","i","name","type","Hangman","guessesLeft","levels","useRef","show","opacity","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeOpacity","hide","addLevel","el","current","push","height","transform","d","ref","cx","cy","rx","ry","CurrMan","Guesses","guess","gameOver","startup","component","word","numLetters","letters","GetLetters","styles","Array","item","String","fromCharCode","onClick","disabled","includes","toLowerCase","left","winLose","won","lost","showWord","word_display","gameOverBtn","AutoHangman","setGuessesLeft","setGameOver","letterform","letters1","useState","setWord","allWords","setAllWords","wordsArr","guessedIncorrect","setGuessedIncorrect","autoGuess","setAutoGuess","w","repeat","bestGuess","arr","newArr","filter","RegExp","replaceAll","length","test","contains","none","forEach","bestGuessLetter","Object","keys","key","reduce","max","curr","indexOf","toUpperCase","charCodeAt","mostCommonLetter","GameArea","parseInt","number","defaultValue","min","Main","focus","tabIndex","onKeyUp","match","click","newDisplay","split","displayed","Source","sourceProps","replace","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0eed1d81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Splash_appear__XAyGe\",\"show-splash-letter\":\"Splash_show-splash-letter__IWTIa\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const addTransition = (href,elname,animationname) => {\n\n    // console.log(effects)\n\n    // const splash = document.querySelector('#Splash')\n    const app = document.querySelector('.App')\n    const anchor = document.querySelector(`a[href=\"${href}\"]`)\n\n    anchor.addEventListener('click',(event) => {\n\n\n        // Prevents browser from following link\n        event.preventDefault()\n\n        // Apply effect\n        app.classList.add('spin-out')\n\n        // Link visited only after animation is finished\n        setTimeout(() => {\n            window.location = href    \n        },2500)\n\n        })\n}\n\nexport default addTransition","import React, { useEffect } from 'react'\nimport './Splash.module.css';\nimport addTransition from '../functions'\n\nconst Splash = () => {\n\n    useEffect(()=> {\n        addTransition('/game')\n    },[])\n\n    return (\n        <header id='Splash'>\n            <a href='/game'>\n\n                <h1>\n                    <span><span>H</span>_</span>\n                    <span><span>a</span>_</span>\n                    <span><span>n</span>_</span>\n                    <span><span>g</span>_</span>\n                    <span><span>m</span>_</span>\n                    <span><span>a</span>_</span>\n                    <span><span>n</span>_</span>\n                </h1>\n                </a>\n        </header>\n        \n    )\n}\n\nexport default Splash\n","// import logo from './logo.svg';\n\nimport './Components/Container'\nimport Splash from './Components/Splash';\n// import Main from './Components/Main'\nimport './App.css'\nimport './Elements/GameArea.module.css'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Splash/>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios'\n\nconst getWord = (cb) => {\n    axios.get('http://random-word-api.herokuapp.com/word?number=1&swear=0')\n    .then(res => {\n        return cb(res.data[0])\n    })\n    .catch(e=>{\n        console.log(e)\n        return cb('hello')\n    })\n}\n\nconst getWordsArr = (n,cb) => {\n    axios.get(`http://random-word-api.herokuapp.com/word?number=${n}&swear=0`)\n    .then(res => {\n        console.log(res)\n        return cb(res.data)\n    })\n    .catch(e=>{\n        console.log(e)\n        return cb(['hello'])\n    })\n}\n\n\nconst getAllWords = (cb) => {\n    axios.get(`http://random-word-api.herokuapp.com/all?swear=0`)\n    .then(res => {\n        return cb(res.data)\n    })\n    .catch(e=>{\n        console.log(e)\n        return cb(['taco','hello'])\n    })\n}\n\nexport {\n    getWordsArr,\n    getWord,\n    getAllWords\n}","import React from 'react'\n\nconst ChangeDisplay = ({ setDisplayWord, displayWord, setGuessed, guessed }) => {\n\n    return (\n        <form\n            onSubmit = {e => {\n                e.preventDefault()\n                        setDisplayWord([...displayWord].map((display,index)=> {\n                            const letter = e.target['letter' + index]\n                            console.log('val',letter.value, display)\n                            \n                            if (letter.value) {\n                                setGuessed([...guessed, letter.value])\n                                const ret = letter.value\n                                console.log('here')\n                                letter.style.visibility = 'hidden'\n                                letter.value = ''\n                                return ret\n                            }\n                            return display\n                        }).join(''))\n                        \n            }}\n        >\n        { ([...displayWord].map((letter,i) => (\n                    <input \n                        key = { letter + i } \n                        name = { 'letter' + i } \n                    />\n       )))}\n       <button type='submit'>+</button>\n        </form>\n    )\n}\n\nexport default ChangeDisplay\n","import React, { createRef } from 'react'\nimport { useRef, useEffect, useState } from 'react'\n\nconst Hangman = ({ guessesLeft }) => {\n\n   const fill = '#170055'\n\n   const levels = useRef([])\n\n   const style = {\n      show: {opacity:1,fill:'none',stroke:'#170055',strokeWidth:1.32292,strokeLinecap:'round',strokeLinejoin:'round',strokeMiterlimit:4,strokeDasharray:'none',strokeOpacity:1},\n      hide: {display:'none'}\n   }\n\n\n   const addLevel = (el) => {\n      if (el) {\n         levels.current.push(el)\n      }\n   }\n\n   return (\n   <>\n   <style>\n   \n   {'@keyframes draw1 \\{\\\n    from \\{\\\n       stroke-dashoffset: 541;\\\n    \\}\\\n     to \\{\\\n       stroke-dashoffset: 0;\\\n     \\}\\\n   \\}\\\n   @keyframes draw2 \\{\\\n      from \\{\\\n         stroke-dashoffset: 302;\\\n      \\}\\\n       to \\{\\\n         stroke-dashoffset: 0;\\\n       \\}\\\n     \\}\\\n   path#ground \\{\\\n      stroke-dasharray: 541 !important;\\\n      animation: draw1 2s linear forwards !important;\\\n   \\}\\\n   path, ellipse \\{\\\n      stroke-dasharray: 302 !important;\\\n      animation: 1s linear 0s 1 normal both running draw2;\\\n   \\}\\\n   path, ellipse \\{\\\n      stroke-dasharray: 302 !important;\\\n      animation: 1s linear 0s 1 normal both running draw2;\\\n   \\}\\\n   #gallows path \\{\\\n      stroke-dasharray: 541 !important;\\\n      animation: 2.5s linear 1s 1 normal both running draw1;\\\n   \\}'}\n   </style>\n      <svg\n         height=\"120\" \n         height=\"480\"\n         viewBox=\"0 0 151.52187 250.00001\"\n         version=\"1.1\"\n      >\n      <g\n         id=\"hangman\"\n         transform=\"translate(140.47568,-53.540357)\">\n         <path\n            style={guessesLeft < 7? style.show : style.hide}\n            d=\"m -42.603371,81.169399 c 24.561041,8.370383 23.029929,46.187501 22.382899,55.306621\"\n            id=\"right_arm\"\n            data-level={7}\n            ref={addLevel}\n         />\n         <ellipse\n            style={guessesLeft < 10? style.show : style.hide}\n            id=\"head\"\n            cx=\"-16.109325\"\n            cy=\"81.16951\"\n            rx=\"26.494043\"\n            ry=\"26.967693\" \n            data-level={10}\n            ref={addLevel}\n         />\n         <path\n            style={guessesLeft < 9? style.show : style.hide}\n            d=\"M -42.603371,81.169399 V 159.78709\"\n            id=\"torso\" \n            data-level={9}\n            ref={addLevel}\n         />\n         <path\n            style={guessesLeft < 8? style.show : style.hide}\n            d=\"M -42.603371,81.169399 C -67.164412,89.539782 -65.6333,127.3569 -64.98627,136.47602\"\n            id=\"left_arm\"\n            data-level={8}\n            ref={addLevel}\n            />\n         <path\n           style={guessesLeft < 6? style.show : style.hide}\n            d=\"m -42.603371,159.78709 c -15.763401,17.42223 -18.312066,55.6863 -18.728548,80.90309\"\n            id=\"left_leg\"\n            data-level={6}\n            ref={addLevel}\n            /> \n         <path\n            style={guessesLeft < 5? style.show : style.hide}\n            d=\"m -42.484851,159.78709 c 15.763402,17.42223 18.312068,55.6863 18.728551,80.90309\"\n            id=\"right_leg\"\n            data-level={5}\n            ref={addLevel}\n            />\n         <path\n            style={guessesLeft < 4? style.show : style.hide}\n            d=\"m -25.245529,96.43086 c 7.256793,-4.659944 16.8128401,-5.015396 26.4946955,-2.16805\"\n            id=\"path869\"\n            data-level={4}\n            ref={addLevel}\n            />\n         <g\n            id=\"left_eye\"\n            style={guessesLeft < 3? style.show : style.hide}\n            transform=\"matrix(0.60426279,0,0,0.60464072,-55.393601,21.42919)\"\n            ref={addLevel}\n         >\n            <path\n               d=\"M 81.642858,96.00595 96.761907,81.642856\"\n               id=\"path875\" \n               data-level={3}\n            />\n            <path\n               d=\"M 98.53944,91.00345 80.479767,84.27294\"\n               id=\"path877\"  \n               data-level={3}\n            />\n         </g>\n         <g\n            id=\"right_eye\"\n            style={guessesLeft < 2? style.show : style.hide}\n            transform=\"matrix(0.60426279,0,0,0.60464072,-55.393601,21.42919)\"\n            ref={addLevel}\n         >\n            <path\n               d=\"M 46.86905,101.29762 61.232146,88.446426\"\n               id=\"path873\" \n               data-level={2}\n            />\n            <path\n               d=\"M 64.22966,98.75319 44.914875,90.890417\"\n               id=\"path879\"\n               data-level={2}\n         />\n         </g>\n         <path\n            style={guessesLeft < 1? style.show : style.hide}\n            d=\"m -18.865742,93.611389 c 5.614471,10.429021 19.18138661,12.428281 12.7902306,-0.565257\"\n            id=\"tongue\"\n            data-level={1}\n            ref={addLevel}\n         />\n         <g\n            id=\"gallows\"\n            style={style.show}\n            transform=\"matrix(0.60426279,0,0,0.60464072,-55.393601,21.42919)\">\n            <path\n               d=\"m 21.166666,98.802818 -0.5134,-36.803215 H -60.59667 V 446.23918\"\n               id=\"path887\"\n               />\n         </g>\n         <path\n            style={style.show}\n            d=\"M 7.7416459,302.87891 C -34.56458,286.0723 -63.62894,276.20148 -139.81422,273.79056\"\n            id=\"ground\"\n            />\n      </g>\n      </svg>\n   </>\n   )\n}\n\nexport default Hangman","import React, { useRef, useEffect, useState } from 'react'\n// import { ReactComponent as Hangman } from '../hangman2.svg'\nimport Hangman from '../Hangman'\n// import { ReactComponent as MySvgFile } from './my_svg_file.svg'\n\n// console.log(Hangman)\n\n// const Curr = () => {\n//     return (\n//         // <>{10}</>\n\n//     )\n// }\n\n\nconst CurrMan = ({guessesLeft}) => {\n\n    // console.log(SVGHangman?.current?.getSVGDocument())\n\n    // const [paths,setPaths] = useState([...SVGHangman?.current?.getSVGDocument()?.querySelectorAll('path, circle') || ''])\n    // \n    // const paths = useRef([])\n\n\n    // console.log('here',paths.current)\n\n    // paths.map(path => {\n    //     path.style.stroke = 'navy'\n    //     path.removeAttribute('class','path')\n    // })\n\n    // useEffect(()=> {\n    //     // paths.current = hangman.getSVGDocument()\n    //     // console.log(hangman_parts.current.querySelectorAll('path, circle'));\n    //     hm.current = [...hangman_parts.current.querySelectorAll('path, circle')].map((path,i) => {\n    //                 return (i >= guessesLeft)? (path.style.stroke = 'red', path.setAttribute('class', 'path')) : (path.style.stroke = 'transparent', path.removeAttribute('class', 'path'))\n    //      })\n    // },[guessesLeft])\n\n    // useEffect(()=>{\n    //     console.log('here',paths.current)\n\n    //     // setPaths(\n    //     paths.current = paths.current.map((path,i) => {\n    //         return (i >= guessesLeft)? (path.style.stroke = 'red', path.setAttribute('class', 'path')) : (path.style.stroke = 'transparent', path.removeAttribute('class', 'path'))\n    //     })\n    // },[guessesLeft])\n\n\n    return (\n            <Hangman\n                guessesLeft = {guessesLeft}\n            />\n        )\n}\n\nexport default CurrMan\n","import React, { useReducer } from 'react'\nimport styles from './GameArea.module.css'\nimport ChangeDisplay from './ChangeDisplay'\nimport CurrMan from './CurrMan'\nimport { useRef } from 'react/cjs/react.development'\n\nconst Guesses = ({ \n    guessesLeft, \n    displayWord,\n    guess, \n    guessed, \n    gameOver, \n    startup, \n    setDisplayWord, \n    setGuessed, \n    component, \n    word, \n    numLetters,\n    letters\n }) => {\n\n\n    // const isMobile = useRef(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))\n\n    // const showKeyboard = () => {\n    //     document.querySelector('#keyboard').style.visibility = \"visible\"\n    //     document.querySelector('#keyboard').focus()\n    //     document.querySelector('#keyboard').style.visibility = \"hidden\"\n    // }\n\n    const GetLetters = () => {\n\n        return (\n            <div id={styles.letters}>\n            { [...Array(26)].map((item,i) => {\n                // letters.current.push(i)\n                const letter = String.fromCharCode(i + 65)\n\n                return (\n                    <button \n                        ref={ el => letters?.push(el)}\n                        key={i} \n                        id={ letter }\n                        onClick={ () => {\n                                guess(letter) \n                        }}\n                        disabled={ guessed.includes(letter.toLowerCase()) }\n                    >\n                        { letter }\n                    </button>\n                )\n            }) }\n            </div>\n        )\n    }\n\n\n    return (\n        <div id={styles.Guesses}>\n            <div>\n                <CurrMan\n                    guessesLeft = {guessesLeft}\n                />\n                <div>Guesses left: {guessesLeft}</div>\n            </div>\n            <div id={styles.left}>\n                {gameOver ? (<div id={styles.winLose}><span className={guessesLeft ? styles.won : styles.lost}>{guessesLeft? 'You Win!': 'You Lose!'}</span><br/><span className={styles.showWord}> The word was {word}</span></div>) : null}\n                <div id={styles.guess}>\n                     { component === 'auto'? \n                        <ChangeDisplay\n                            setDisplayWord = {setDisplayWord}\n                            displayWord = {displayWord}\n                            setGuessed = {setGuessed}\n                            guessed = {guessed}\n                        /> : null }\n                </div>\n                <div id={styles.word_display}>\n                    { [...displayWord].map((letter,i) => (\n                        <span key={ letter + i }>{ letter }</span>\n                    )) }\n                </div>\n                {/* <input type=\"text\" pattern={/[^a-z]/} id={'keyboard'}/> */}\n                {/* <button\n                    onClick={showKeyboard}\n                >Show Keyboard</button> */}\n                <GetLetters />\n                <button id={styles.gameOverBtn} onClick={()=>startup(numLetters)}>{gameOver? 'New Game' : 'New Word'}</button>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Guesses\n\n\n","import React, { useState, useEffect, useRef } from 'react'\nimport GameArea from '../Elements/GameArea'\nimport { getAllWords } from '../API/main'\nimport './auto.css'\n\nconst AutoHangman = ({\n    gameOver,\n    guessesLeft,\n    setGuessesLeft,\n    displayWord,\n    setDisplayWord,\n    setGameOver,\n    component\n    }) => {\n\n    const letterform = useRef(null)\n\n    const letters1 = useRef([])\n                \n    const [word, setWord] = useState([null])\n\n    const [allWords, setAllWords] = useState([])\n\n    const numLetters = useRef(null)\n    \n    const wordsArr = useRef([])\n    const [guessed, setGuessed] = useState([])\n    const [guessedIncorrect, setGuessedIncorrect] = useState([])\n\n    const [autoGuess, setAutoGuess] = useState('none')\n\n    const startup = (numLetters) => {\n        setGameOver(false)\n        setWord(null)\n        setGuessed([])\n        setGuessesLeft(15)\n        getAllWords((w) => {\n            setAllWords(w)\n        })\n        setDisplayWord('_'.repeat(numLetters))\n    }\n\n\n    // const sortByMostCommon = (arr) => { \n    //     const letters = ['e','a','r','i','o','t','n','s','l','c','u','d','p','m','h','g','b','f','y','w','k','v','x','z','j','q']\n    //     return arr.sort((a,b)=> {\n    //         for (let i = 0; i < a.length || b.length; i++) {\n    //             if (a[i] !== b[i]) return letters.indexOf(a[i]) - letters.indexOf(b[i])\n    //         }\n    //     })\n    // }\n   \n\n    const mostCommonLetter = (arr) => {\n        const letters = ['e','a','r','i','o','t','n','s','l','c','u','d','p','m','h','g','b','f','y','w','k','v','x','z','j','q']\n        const contains = {none: -Infinity}\n\n        arr.forEach(word => {\n            return [...word].forEach(letter => {\n                if (!guessed.includes(letter)) return contains[letter]? contains[letter]++ : contains[letter] = 1            \n            })\n        })\n    \n        const arr1 = Object.keys(contains).filter(key => !guessed.includes(key))\n\n        const bestGuessLetter = arr1.reduce((max, curr) => {\n            if (!guessed.includes(curr) && contains[curr] > contains[max]) {\n                return curr\n            } else if (!guessed.includes(curr) && contains[curr] === contains[max]) {\n                return letters.indexOf(curr) < letters.indexOf(max) ? curr : max\n            } else {\n                return max\n            }\n        },'none')\n        letters1.current?.[bestGuessLetter.toUpperCase().charCodeAt(0) - 65].classList.add('best-guess')\n        console.log(letters1,letters1.current?.[bestGuessLetter.toUpperCase().charCodeAt(0) - 65],bestGuessLetter.toUpperCase().charCodeAt(0) - 65)\n        return bestGuessLetter\n    }\n\n    const bestGuess = (arr) => {\n        const newArr = arr.filter(word => new RegExp('^'+displayWord?.replaceAll('_',guessed.length?`[^${guessed.join('')}]`: '.')+'$').test(word))        \n        console.log(new RegExp('^'+displayWord?.replaceAll('_',guessed.length?`[^${guessed.join('')}]`: '.')+'$'))\n        console.log(newArr)\n        return mostCommonLetter(newArr)\n    }\n                \n    useEffect(()=> {\n        setAutoGuess(bestGuess(wordsArr.current))\n    },[guessed, gameOver, bestGuess])\n\n    useEffect(() => {\n        if (!(guessesLeft && (!displayWord || /_/.test(displayWord)))) {\n            console.log(\"look here\", guessesLeft, displayWord)\n            setGameOver(true)\n        }\n        if (!/_/.test(displayWord)) setWord(displayWord)\n    },[displayWord + guessesLeft])\n\n\n            \n                    \n    const guess = (letter) => {\n        letter = letter.toLowerCase()\n    \n        if (guessed.includes(letter)) return\n        if (!guessesLeft) return\n    \n        setGuessed([...guessed, letter])\n        setGuessedIncorrect([...guessedIncorrect,letter])\n        setGuessesLeft(guessesLeft - 1)\n    }\n\n\n    useEffect(()=>{  \n        startup()\n    },[])\n\n    return (\n        <div className=\"App\">\n\n            <GameArea\n                guessesLeft = { guessesLeft }\n                displayWord = { displayWord || '...' }\n                setDisplayWord = { setDisplayWord }\n                guess = { guess }\n                guessed = { guessed }\n                setGuessed = { setGuessed }\n                startup = { startup }\n                component = { component }\n                gameOver = { gameOver }\n                word = { word }\n                numLetters = { numLetters.current }\n                letters = { letters1.current }\n            />\n             <span className=\"is-in-word\"> Is the letter { autoGuess?? \"\"} in the word?\n                <i className=\"yes\"> &#x02713; </i>\n                <i className=\"no\"> &times; </i>\n            </span>\n            <form ref={ letterform }className=\"letters\" onSubmit={(e)=>{\n                e.preventDefault()\n                numLetters.current = parseInt(e.target.number.value)\n                startup(numLetters.current)\n                wordsArr.current = allWords.filter(word=> word.length === parseInt(e.target.number.value))\n                letterform.current.style.display = 'none'\n            }\n            }>\n                Pick a word, any word <small>(between 4 and 15 letters)</small>\n                <label>How many letters in the word? </label>\n                <div>\n                    <input name='number' type='number' defaultValue='4' min='4' max='15'/>\n                    <button type=\"submit\">start</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default AutoHangman\n","import React, { useEffect, useReducer, useRef, useState } from 'react'\nimport GameArea from '../Elements/GameArea'\n\nconst Main = ({         \n    guessesLeft,\n    setGuessesLeft,\n    guessed,\n    setGuessed,\n    word,\n    setWord,\n    displayWord,\n    setDisplayWord,\n    startup,\n    gameOver,\n    setGameOver,\n    component\n }) => {\n\n    useEffect(() => {\n        document.querySelector('.App').focus()\n        startup()\n    },[])\n\n    const guess = (letter) => {\n    \n        letter = letter.toLowerCase()\n    \n        if (guessed.includes(letter)) return\n        if (displayWord === word) return\n        if (!guessesLeft) return\n    \n        setGuessed([...guessed, letter])    \n    \n        if (word && word.includes(letter)) {\n            const newDisplay = displayWord.split('').map((displayed,i) => {\n                if (word[i] === letter) {\n                    return letter\n                }\n                else return displayed\n            }).join('')\n    \n            setDisplayWord(newDisplay)\n        } \n    \n        else {\n            setGuessesLeft(guessesLeft - 1)\n        }\n        document.querySelector('.App').focus()\n    }\n\n\n    useEffect(() => {\n        if (!guessesLeft || (word && (displayWord === word))) setGameOver(true)\n        console.log(guessesLeft, displayWord, word)\n    },[guessesLeft && (displayWord === word) || (displayWord && guessesLeft)])\n\n    return (\n        <div \n            className='App spin-in'\n            tabIndex='0'\n            onKeyUp={ (e) => {\n                if (e.key.match(/^[a-z]$/i)) {\n                    e.preventDefault()\n                    console.log(`#${e.key.toUpperCase()}`, document.querySelector(`#${e.key.toUpperCase()}`))\n                    const letter = document.querySelector(`#${e.key.toUpperCase()}`)\n                    letter.click()\n                } else if (e.key.match(/ /)) return startup()\n            }}\n        >\n            <GameArea \n                guessesLeft = { guessesLeft }\n                word = { word }\n                displayWord = { displayWord? displayWord : '...'}\n                guess = { guess }\n                guessed = { guessed }\n                gameOver = { gameOver }\n                startup = { startup }\n                component = { component }\n            />\n        </div>\n    )\n}\n\nexport default Main\n","import React, { useEffect, useReducer, useRef, useState } from 'react'\nimport { getWord, getWordsArr } from '../API/main'\nimport AutoHangman from './AutoHangman'\nimport Main from './Main'\n\nimport { Route } from \"react-router-dom\";\n\nconst Source = () => {\n    \n    const [guessesLeft, setGuessesLeft] = useState(10)\n    \n    const [word, setWord] = useState(null)\n    \n    const [guessed, setGuessed] = useState([])\n    \n    const [displayWord, setDisplayWord] = useState(null)\n\n    const [gameOver, setGameOver] = useState(false)\n\n    const startup = () => {\n        setGameOver(false)\n        setGuessed([])\n        setGuessesLeft(10)\n        getWord((w) => {\n            setWord(w)\n            setDisplayWord(w.replace(/[a-z]/ig,'_'))\n        })\n    }\n\n    const sourceProps = {\n        guessesLeft,\n        setGuessesLeft,\n        guessed,\n        setGuessed,\n        word,\n        setWord,\n        displayWord,\n        setDisplayWord,\n        getWord,\n        startup,\n        gameOver,\n        setGameOver\n    }\n\n    return (\n        <>\n            <Route exact path=\"/Hangman\" key=\"main\">\n                <Main \n                    { ...sourceProps }\n                    component = { 'main' }\n                />\n            </Route>\n            <Route exact path=\"/auto\" key=\"auto\">\n                <AutoHangman\n                    { ...sourceProps }\n                    component = { 'auto' }\n                />\n            </Route>\n        </>\n    )\n}\n\nexport default Source\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams\n} from \"react-router-dom\";\n\n// import './index.css';\nimport App from './App';\n// import Main from './Components/Main'\n// import AutoHangman from './Components/AutoHangman'\nimport Source from './Components/Source'\n// import Main from './Components/Main'\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route>\n          <Source/>\n        </Route>\n      </Switch>\n    </Router>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Guesses\":\"GameArea_Guesses__yyryw\",\"word_display\":\"GameArea_word_display__2C7j-\",\"letters\":\"GameArea_letters__3a9gE\",\"best-guess\":\"GameArea_best-guess__3snWO\",\"path\":\"GameArea_path__aV_1n\",\"dash\":\"GameArea_dash__3elkO\",\"gameOverBtn\":\"GameArea_gameOverBtn__372tP\",\"left\":\"GameArea_left__1wsp-\",\"winLose\":\"GameArea_winLose__JYow7\",\"transition\":\"GameArea_transition__2FyaY\",\"won\":\"GameArea_won__1acar\",\"lost\":\"GameArea_lost__3IwKo\",\"showWord\":\"GameArea_showWord__1ukQ8\",\"guess\":\"GameArea_guess__18FpU\"};"],"sourceRoot":""}